#!/bin/bash
#
# Copyright (C) 2017 Ericsson India Global Services Pvt Ltd. and others.  All rights reserved..
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 which accompanies this distribution,
# and is available at http://www.eclipse.org/legal/epl-v10.html
#
# Authors : Volker Luessem, Rihab Banday, Faseela K

#
# sample k8s cni plugin for opendaylight
#

DIR=$(dirname $(readlink -f $0))
source $DIR/configuration

#
# The function to exit the plugin in case of an error
#
function error
{
cat << EOF
{
  "cniVersion": "0.1.0",
  "code": "100",
  "msg": "$1"
}
EOF

echo "+++ Plugin execution finished with error: $1 +++" >> $OUTFILE

# Append temporary log to log
cat $OUTFILE >> $LOGFILE
rm $OUTFILE

exit 1
}


#
# The script starts here
#

# Make sure that directory /var/run/netns exists
mkdir -p /var/run/netns

# Get the Pid of the container
PID=`echo $CNI_NETNS | awk -F '/' '{ print $3 }'`

# Generate unique names for the temporary files
OUTFILE=$DIR/log$PID.tmp
ARGFILE=$DIR/args$PID.tmp

# Log received information
echo "------------------------------------------------------------" > $OUTFILE
date >> $OUTFILE
echo "CNI_VERSION:     $CNI_VERSION" >> $OUTFILE
echo "CNI_COMMAND:     $CNI_COMMAND" >> $OUTFILE
echo "CNI_CONTAINERID: $CNI_CONTAINERID" >> $OUTFILE
echo "CNI_NETNS:       $CNI_NETNS" >> $OUTFILE
echo "CNI_IFNAME:      $CNI_IFNAME" >> $OUTFILE
echo "CNI_ARGS:        $CNI_ARGS" >> $OUTFILE
echo "CNI_PATH:        $CNI_PATH" >> $OUTFILE
cat >> $OUTFILE

# Extract tenant name from pod name
echo $CNI_ARGS > $ARGFILE
TENANT=$(grep -Po 'K8S_POD_NAMESPACE=\K[^ ]+' $ARGFILE | cut -d ';' -f 1) 2>> $OUTFILE
rm $ARGFILE

# Fetch ELAN name for the tenant from etcd
ELAN=$(/opt/bin/etcdctl --endpoints $ETCD get /poc/tenants/$TENANT/elan) &>> $OUTFILE
if [ -z $ELAN ]
then
  error "Elan name empty"
fi

# Generate device names for the veth link
VETH=veth$DIFFERENTIATOR$PID
VETHTMP=veth$PIDtmp

if [ "$CNI_COMMAND" = "ADD" ]
then
#
# ADD command
#

# Generate an IP address for the new container
IP_PREFIX=$(/opt/bin/etcdctl --endpoints $ETCD get /poc/tenants/$TENANT/subnet | cut -d. -f1,2) &>> $OUTFILE
if [ -z $IP_PREFIX ]
then
  error "IP-Prefix empty"
fi

IP=$($DIR/get-ip /poc/tenants/$TENANT/ip $ETCD)
if [ -z $IP ]
then
  error "IP empty"
fi
IP_LOW=$($DIR/get_low_byte $IP)
IP_HIGH=$($DIR/get_high_byte $IP)

IP_ADDR="$IP_PREFIX.$IP_HIGH.$IP_LOW/16"

# Log generated information
echo "tenant name for this container: $TENANT" >> $OUTFILE
echo "elan name for this container $ELAN" >> $OUTFILE
echo "IP address for this container: $IP_ADDR" >> $OUTFILE
echo "veth endpoint for this container: $VETH" >> $OUTFILE


# Create a veth link using the veth endpoint and the temporary veth endpoint
ip link add $VETH type veth peer name $VETHTMP 2>> $OUTFILE

# Disable TCP checksum offload for container interface
ethtool --offload $VETHTMP rx off tx off 2>> $OUTFILE >> /dev/null

# Create a named network namspace
ln -s /proc/$PID/ns/net /var/run/netns/$PID 2>> $OUTFILE

# Move the temporary endpoint of the veth link to the network namspace of the container
ip link set $VETHTMP netns $CNI_NETNS 2>> $OUTFILE

# Rename the temporary veth endpoint in the namespace of the container
ip netns exec $PID ip link set name $CNI_IFNAME dev $VETHTMP

# Add the other endpoint of the veth link to the OVS bridge and bring it up
ip link set $VETH up 2>> $OUTFILE
#/opt/openvswitch/install/bin/ovs-vsctl add-port $BRIDGE $VETH 2>> $OUTFILE
/opt/css-3/install/bin/ovs-vsctl-3 add-port $BRIDGE $VETH 2>> $OUTFILE

# Create the new port in the controller and connect it to the ELAN
$DIR/configure_odl "ADD" $VETH $ELAN $OUTFILE

# Assign an IP address to the interface in the container and bring it up
ip netns exec $PID ip address add $IP_ADDR dev $CNI_IFNAME 2>> $OUTFILE
ip netns exec $PID ip link set dev $CNI_IFNAME up 2>> $OUTFILE

# Add a default route in the container
#ip netns exec $PID ip route add default via $BRIDGE_IP
ip netns exec $PID ip route add default via 10.0.0.10
#ip netns exec $PID ip route add 192.168.3.0/24 dev $CNI_IFNAME 2>> $OUTFILE

else
#
# DEL command
#
#/opt/openvswitch/install/bin/ovs-vsctl del-port $BRIDGE $VETH 2>> $OUTFILE
/opt/css-3/install/bin/ovs-vsctl-3 del-port $BRIDGE $VETH 2>> $OUTFILE
ip link del $VETH type veth peer name $CNI_IFNAME 2>> $OUTFILE
rm -r /var/run/netns/$PID
$DIR/configure_odl "DEL" $VETH $ELAN $OUTFILE
fi

cat << EOF
{
  "cniVersion": "0.1.0",
  "ip4": {
    "ip": "$IP_ADDR"
  }
}
EOF

# Append temporary log to log
cat $OUTFILE >> $LOGFILE
rm $OUTFILE

exit 0

